program        - statement* EOF ;

statement      - exprStmt ;

exprStmt       - expression ";"
                 | assignment ";"
                 | declaration
                 | whileStmt
                 | ifStmt 
                 | forStmt
                 | function
                 | class
                 | yield
                 ;

ifStmt         - "if" "(" expression ")" "{" (statement*) "}" ( "else" ( ifStmt | "{" statement* "}" ) )? ;
whileStmt      - "while" "(" expression ")" "{" statement* "}" ;
forStmt        - "for" "(" declaration? ";" expression? ";" assignment? ")" "{" statement* "}" ;

expression     - logicalOr ;
logicalOr      - logicalAnd ( "||" logicalAnd )* ;
logicalAnd     - equality ( "&&" equality )* ;
equality       - comparison ( ( "!=" | "==" ) comparison )* ;
comparison     - term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           - factor ( ( "-" | "+" ) factor )* ;
factor         - unary ( ( "/" | "*" ) unary )* ;
unary          - ( "!" | "-" ) unary
                 | call
                 ;
primary        - NUMBER | STRING | "true" | "false" | "nil"
                 | "(" expression ")"
                 | "new" identifier
                 ;
call           - primary ( "(" argument? ")" );
argument       - expression ( "," expression )* ;
function       - "function" identifier "(" parameter? ")" "{" (statement*) "}" ;
parameter      - identifier ( "," identifier )* ;
class          - "class" identifier "{" (constructor | function)* "}" ;
constructor    - identifier "(" parameter? ")" "{" (statement*) "}" ;
return         - "return" expression ;
yield          - "yield" call ;
assignment     - identifier "=" expression
                 | identifier ( "++" | "--")
                 | identifier ( "+=" | "-=" | "*=" | "/=") expression
                 ;
declaration    - "var" indentifier ";" ;
